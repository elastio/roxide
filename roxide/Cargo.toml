[package]
name = "roxide"

description = """
Elastio's comprehensive Rust bindings for RocksDB.

Builds on a fork of rust-rocksdb, adding support for missing functionality, async, and a lot of Rust conveniences.
"""

authors = ["Adam Nelson <adam@elastio.com>"]
edition = "2021"
license = "MIT OR Apache-2.0"
publish = ["elastio-private"]
version = "8.0.2-dev"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
default = ["anyhow", "static", "lz4", "zstd"]

# Link RocksDB and all of its dependencies as a static library
static = ["roxide-librocksdb-sys/static"]

# Enable LZ4 compression in RocksDB
lz4 = ["roxide-librocksdb-sys/lz4", "rocksdb/lz4"]

# Enable zstd compression in RocksDB
zstd = ["roxide-librocksdb-sys/zstd", "rocksdb/zstd"]

# Enable async I/O with io_uring (on Linux only; on other platforms as no effect)
#
# Note that currently enabling this feature will always set `async_io` in `ReadOptions` to true, but as of RocksDB
# 8.0.0 only iterator reads and `MultiGet` actually do anything asynchronously.  That plus the fact that enabling this
# won't actually do async MultiGet operations yet because I can't get folly to compile is why this isn't on by default.
io_uring = ["roxide-librocksdb-sys/io_uring", "rocksdb/io_uring"]

# By default, enable deadlock detection when using the pessimistic locking TransactionDb type
# This can always be enabled or disabled at runtime on a single `TransactionOptions` instance,
# but by enabling this feature the default setting is to enable this if `None` is passed for
# `TransactionOptions` when beginning a new transaction on TransactionDb.
#
# This has no effect if using `Db` or `OptimisticTransactionDb` types.
deadlock_detection = []

# Enable jemalloc support in RocksDB
# NOTE: The Rust code will use whatever the Rust allocator is in the current process
# Enabling this feature won't automatically make the Rust code use jemalloc.  For that you
# must set the allocator in the `main.rs` of whatever binary crate hosts RocksDB.
# This feature takes a dependency on the Rust jemallocator crate but it only causes the RocksDB
# C++ code to use jemalloc.
jemalloc = ["roxide-librocksdb-sys/jemalloc", "jemalloc-ctl"]

[dependencies]
anyhow                = { version = "1.0", optional = true }
async-trait           = "0.1.48"
cheburashka           = { version = "4.0", registry = "elastio-private" }
cpp                   = "0.5"
elasyncio             = { version = "3.0", registry = "elastio-private" }
futures               = "0.3"
hex                   = "0.4"
jemalloc-ctl          = { version = "0.5", optional = true }
lazy_static           = "1.4"
libc                  = "0.2"
maplit                = "1.0"
num-traits            = "0.2"
num_enum              = "0.6"
once_cell             = "1.13"
parking_lot           = "0.12"
pin-project           = "1.0"
rand                  = { version = "0.8", features = ["small_rng"] }
roxide-librocksdb-sys = { path = "../roxide-librocksdb-sys", default_features = false }
serde                 = { version = "1.0", features = ["derive"] }
serde_json            = "1.0"
smallvec              = "1.5"
snafu                 = { version = "0.6", features = ["backtraces", "futures"] }
strum                 = { version = "0.25", features = ["derive"] }
tempfile              = "3"
tokio                 = { version = "1.4", features = ["full"] }
try-again             = { version = "2.0", registry = "elastio-private", features = ["rand"] }

# Needed only for the log level enum
log = "0.4"

[dependencies.rocksdb]
default_features = false
features         = ["multi-threaded-cf"]
package          = "roxide-rocksdb"
path             = "../roxide-rocksdb"


[dev-dependencies]
assert_matches    = "1.4"
glob              = "0.3.0"
more-asserts      = "0.3"
num_cpus          = "1"
quickcheck        = "1.0"
quickcheck_macros = "1.0"
uuid              = "1"
walkdir           = "2.3.1"

[build-dependencies]
cpp_build = "0.5"
